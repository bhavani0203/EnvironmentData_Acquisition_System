import network
import socket
from machine import Pin, I2C
from bme680 import *

def web_page(result):
    html = """<html>...</html>"""
    return html.replace('%TEMP_C%', str(result["temperature"])) \
               .replace('%TEMP_F%', str(result["temperature_f"])) \
               .replace('%PRESSURE%', str(result["pressure"])) \
               .replace('%HUMIDITY%', str(result["humidity"])) \
               .replace('%GAS%', str(result["gas"]))

def ap_mode(ssid, password):
    ap = network.WLAN(network.AP_IF)
    ap.config(essid=ssid, password=password)
    ap.active(True)
    
    while not ap.active():
        pass
    print('AP Mode Is Active, You can Now Connect')
    print('IP Address To Connect to:: ' + ap.ifconfig()[0])
    
    s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
    s.bind(('', 80))
    s.listen(5)

    while True:
        try:
            conn, addr = s.accept()
            print('Got a connection from %s' % str(addr))
            request = conn.recv(1024)
            print('Content = %s' % str(request))

            # Check if the request is for WebSocket upgrade
            if 'Upgrade: websocket' in str(request):
                ws = websocket.server_handshake(conn)
                websocket_server(ws, result)
            else:
                response = web_page(result)
                conn.send(response)
            conn.close()
        except Exception as conn_error:
            print(f"An error occurred while handling connection: {conn_error}")

if __name__ == '__main__':
    # Initialize BME680 sensors
    i2c = I2C(0, scl=Pin(1), sda=Pin(0))
    i2c_2 = I2C(1, sda=Pin(2), scl=Pin(3))
    bme = BME680_I2C(i2c=i2c)
    bme2 = BME680_I2C(i2c=i2c_2)

    # Read sensor data
    data = {
        "temperature": round(bme.temperature, 2),
        "temperature_f": round(bme.temperature * (9/5) + 32, 2),
        "pressure": round(bme.pressure, 2),
        "humidity": round(bme.humidity, 2),
        "gas": round(bme.gas/1000, 2),
    }

    result = data

    # Start access point mode
    ap_mode('Rasberrywifi', 'PASSWORD')
